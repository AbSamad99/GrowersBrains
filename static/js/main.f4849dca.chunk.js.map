{"version":3,"sources":["screens/Dashboard/assets/greenhouse.jpg","screens/Dashboard/assets/contest.jpg","screens/Dashboard/assets/ranking.jpg","screens/Dashboard/assets/howTo.jpg","screens/Dashboard/assets/dailyGrow.jpg","screens/Dashboard/assets/bestReviewed.jpg","screens/Dashboard/assets/ellipse.png","screens/Dashboard/InfoSection/index.js","screens/Dashboard/Subscribe/index.js","screens/Dashboard/Footer/index.js","screens/Dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","sectionOne","id","title","description","imageUrl","greenhouseImg","contestImg","rankingImg","sectionTwo","howToImg","bestReviewedImg","dailyGrowImg","map","item","key","className","SectionOneItem","style","backgroundImage","href","SectionTwoItem","src","alt","type","placeholder","ellipseImg","dangerouslySetInnerHTML","aria-hidden","rel","Dashboard","InfoSection","Subscribe","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4849dca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greenhouse.ccbe5658.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contest.544a4d95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ranking.fe4645f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/howTo.28ba59f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dailyGrow.9c01ed45.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bestReviewed.884e0ba8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ellipse.0c3126ba.png\";","import React from 'react';\nimport greenhouseImg from '../assets/greenhouse.jpg';\nimport contestImg from '../assets/contest.jpg';\nimport rankingImg from '../assets/ranking.jpg';\nimport howToImg from '../assets/howTo.jpg';\nimport dailyGrowImg from '../assets/dailyGrow.jpg';\nimport bestReviewedImg from '../assets/bestReviewed.jpg';\nimport './style.scss';\n\nconst sectionOne = [\n  {\n    id: 1,\n    title: 'Green House',\n    description: 'A locker of all the plants a person is growing with data of the daily processes including time-lapse generators,',\n    imageUrl: greenhouseImg\n  },\n  {\n    id: 2,\n    title: 'Contest',\n    description: 'Daily, weekly and monthly competitions will be help for growers of various categories.',\n    imageUrl: contestImg\n  },\n  {\n    id: 3,\n    title: 'Growers Ranking',\n    description: 'Ranking of the best growers in the world, who can help with the one on one consulting.',\n    imageUrl: rankingImg\n  }\n]\n\nconst sectionTwo = [\n  {\n    id: 1,\n    title: 'How-To Articles From Top Growers',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, id ipsam. Quasi explicabo necessitatibus quas, neque id minus quibusdam itaque earum, placeat officiis ab corporis, consequuntur eius iste nulla illo',\n    imageUrl: howToImg\n  },\n  {\n    id: 2,\n    title: 'Best Reviewed Products',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, id ipsam. Quasi explicabo necessitatibus quas, neque id minus quibusdam itaque earum, placeat officiis ab corporis, consequuntur eius iste nulla illo',\n    imageUrl: bestReviewedImg\n  },\n  {\n    id: 3,\n    title: 'Daily Grow Updates',\n    description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eaque, id ipsam. Quasi explicabo necessitatibus quas, neque id minus quibusdam itaque earum, placeat officiis ab corporis, consequuntur eius iste nulla illo',\n    imageUrl: dailyGrowImg\n  }\n]\n\nexport default() => {\n  return (\n    <>\n      <section id=\"sectionOne\">\n        {sectionOne.map(item => <SectionOneItem key={item.id} {...item} />)}\n      </section>\n      <section id=\"sectionTwo\" className=\"container\">\n        {sectionTwo.map(item => <SectionTwoItem key={item.id} {...item} />)}\n      </section>\n    </>\n  );\n}\n\nconst SectionOneItem = ({ title, description, imageUrl }) => (\n  <div\n    className=\"sectionOne-item\"\n    style={{ backgroundImage: `url(${imageUrl})` }}>\n    <div className=\"card\">\n      <div className=\"content-container\">\n        <h2 className=\"title\">{title}</h2>\n        <p className=\"description\">{description}</p>\n        <a href=\"#link\" className=\"link\">{`Learn More \\u2192`}</a>\n      </div>\n    </div>\n  </div>\n);\n\nconst SectionTwoItem = ({ title, description, imageUrl }) => (\n  <div className=\"sectionTwo-item\">\n    <div className=\"imgContainer\">\n      <div className='border' />\n      <img src={imageUrl} alt=\"test\" />\n    </div>\n    <div className=\"content-container\">\n      <h2 className=\"title\">{title}</h2>\n      <p className=\"description\">{description}</p>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ellipseImg from '../assets/ellipse.png';\nimport './style.scss';\n\nexport default () => (\n  <section className=\"subscribe\">\n    <div className=\"content\">\n      <h2 className=\"title\">Subscribe for Daily Updates</h2>\n      <div className='input-container'>\n        <input id='email' type='text' className=\"input-email\" placeholder=\"Enter Email\" />\n        <button id='submit' className=\"subscribe-btn\" >\n          Subscribe\n        </button>\n      </div>\n    </div>\n    <img className=\"ellipsis\" src={ellipseImg} alt=\"background\" />\n  </section>\n)\n","import React from 'react';\nimport './style.scss';\n\nexport default () => (\n  <footer className=\"footer\">\n    <div className=\"container\">\n      <div className=\"top\">\n        <p className=\"contact-text\">Contact</p>\n        <div className=\"contact-info\">\n          <p className=\"phone\">+1-234-567-8900</p>\n          <p className=\"email\">info@growersbrains.com</p>\n        </div>\n        <p className=\"title\">Growers Brains</p>\n        <button className=\"contact\">Contact Us</button>\n      </div>\n      <div className=\"h-line\" />\n      <div className=\"bottom\">\n        <div className=\"bottom-left\">\n          <ul className=\"footer-list\">\n            <li><button href=\"#\">Help</button></li>\n            <li><button href=\"#\">Terms</button></li>\n            <li><button href=\"#\">Privacy Policy</button></li>\n          </ul>\n          <p className=\"copyright\"><span dangerouslySetInnerHTML={{ \"__html\": \"&copy;\" }} />2020 Growers Brains</p>\n        </div>\n        <div className=\"social-icons\">\n          <ul className=\"social-list__items\">\n            <li className=\"social-list__item\">\n              <a href=\"http://facebook.com\" aria-hidden=\"true\" className=\"social-list__link\" rel=\"noopener\" alt=\"go to Instagram\">\n                <span className=\"sr-only\">Opens new window</span>\n                <i className=\"fab fa-facebook fa-2x\"></i>\n              </a>\n            </li>\n            <li className=\"social-list__item\">\n              <a href=\"http://linkedin.com\" aria-hidden=\"true\" className=\"social-list__link\" rel=\"noopener\" alt=\"go to LinkedIn\">\n                <span className=\"sr-only\">Opens new window</span>\n                <i className=\"fab fa-linkedin fa-2x\"></i>\n              </a>\n            </li>\n            <li className=\"social-list__item\">\n              <a href=\"http://twitter.com\" aria-hidden=\"true\" className=\"social-list__link\" rel=\"noopener\" alt=\"go to Twitter\">\n                <span className=\"sr-only\">Opens new window</span>\n                <i className=\"fab fa-twitter fa-2x\"></i>\n              </a>\n            </li>\n            <li className=\"social-list__item\">\n              <a href=\"http://youtube.com\" aria-hidden=\"true\" className=\"social-list__link\" rel=\"noopener\" alt=\"go to Youtube\">\n                <span className=\"sr-only\">Opens new window</span>\n                <i className=\"fab fa-youtube fa-2x\"></i>\n              </a>\n            </li>\n            <li className=\"social-list__item\">\n              <a href=\"http://instagram.com\" aria-hidden=\"true\" className=\"social-list__link\" rel=\"noopener\" alt=\"go to Instagram\">\n                <span className=\"sr-only\">Opens new window</span>\n                <i className=\"fab fa-instagram fa-2x\"></i>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </footer>\n);\n","import React from 'react';\nimport InfoSection from './InfoSection';\nimport Subscribe from './Subscribe';\nimport Footer from './Footer';\n\nconst Dashboard = () => {\n  return (\n    <>\n      <InfoSection />\n      <Subscribe />\n      <Footer />\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.scss';\nimport Dashboard from './screens/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}